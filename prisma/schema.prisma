// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String        @id @default(uuid())
  name        String
  price       Int
  description String
  images      String[]
  stock       Int
  slug        String
  category    Category[]
  orderDetail OrderDetail[]
  whishlist   Whishlist[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Cart {
  id        String   @id @default(uuid())
  totalQty  Int
  totalCost Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Whishlist {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String
  slug      String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id        String      @id @default(uuid())
  name      String      @unique
  email     String      @unique
  password  String
  address   String
  phone     String
  role      String      @default("USER")
  Order     Order[]
  Cart      Cart[]
  Whishlist Whishlist[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Order {
  id          String        @id @default(cuid())
  orderDetail OrderDetail[]
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  status      String        @default("PENDING")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model OrderDetail {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
